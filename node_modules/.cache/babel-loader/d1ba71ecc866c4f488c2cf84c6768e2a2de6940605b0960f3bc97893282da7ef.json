{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Vamsi\\\\karthik-changing-f\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { authAPI } from '../api/apiService';\nimport logo from '../assets/rightlogo.png';\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateCaptcha = () => {\n  // Random captcha generation\n  const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  let captcha = '';\n  for (let i = 0; i < 5; i++) {\n    captcha += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return captcha;\n};\nconst Login = () => {\n  _s();\n  const {\n    login\n  } = useContext(AuthContext);\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginType, setLoginType] = useState('official'); // 'official', 'fpo', 'employee', 'farmer'\n  const [captcha, setCaptcha] = useState('');\n  const [captchaValue, setCaptchaValue] = useState(generateCaptcha());\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleLoginType = type => {\n    setLoginType(type);\n    setError('');\n    setCaptcha('');\n    setCaptchaValue(generateCaptcha());\n  };\n  const handleRefreshCaptcha = () => {\n    setCaptchaValue(generateCaptcha());\n    setCaptcha('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    if (captcha.trim().toLowerCase() !== captchaValue.toLowerCase()) {\n      setError('Captcha does not match.');\n      setLoading(false);\n      setCaptchaValue(generateCaptcha());\n      setCaptcha('');\n      return;\n    }\n    try {\n      var _response$data;\n      const loginData = {\n        userName,\n        password\n      };\n      const response = await authAPI.login(loginData);\n      console.log('Login - Full login response:', response);\n      console.log('Login - Login response data keys:', Object.keys(response || {}));\n      const {\n        token\n      } = response;\n\n      // Extract user data from login response\n      const userData = response.user || ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.user);\n      console.log('Login - User data from login response:', userData);\n      if (userData) {\n        var _response$data2, _user$role, _user$role$toUpperCas, _user$role$toUpperCas2, _user$role$toUpperCas3, _user$role2, _user$role3, _user$role4, _user$role4$toUpperCa, _user$role4$toUpperCa2, _user$role4$toUpperCa3;\n        const user = {\n          userName: userData.userName || userName,\n          name: userData.name,\n          email: userData.email,\n          role: userData.role,\n          forcePasswordChange: response.forcePasswordChange || ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.forcePasswordChange) || false,\n          status: userData.status\n        };\n\n        // For users with temporary passwords, force password change\n        if (password.includes('Temp@')) {\n          user.forcePasswordChange = true;\n          console.log('Login - Detected temporary password, forcing password change');\n        }\n        console.log('Login - User data constructed:', user);\n        console.log('Login - User role from login response:', userData.role);\n        login(user, token);\n\n        // Check if user needs to change password (first time login with temp password)\n        console.log('Login - Checking forcePasswordChange:', user.forcePasswordChange);\n        console.log('Login - Password contains Temp@:', password.includes('Temp@'));\n        if (user.forcePasswordChange) {\n          console.log('Login - Redirecting to change password page');\n          navigate('/change-password');\n          return;\n        }\n\n        // Role-based navigation after password change or normal login\n        console.log('Login - User role for navigation:', user.role);\n        console.log('Login - User role (normalized):', (_user$role = user.role) === null || _user$role === void 0 ? void 0 : (_user$role$toUpperCas = _user$role.toUpperCase) === null || _user$role$toUpperCas === void 0 ? void 0 : (_user$role$toUpperCas2 = _user$role$toUpperCas.call(_user$role)) === null || _user$role$toUpperCas2 === void 0 ? void 0 : (_user$role$toUpperCas3 = _user$role$toUpperCas2.trim) === null || _user$role$toUpperCas3 === void 0 ? void 0 : _user$role$toUpperCas3.call(_user$role$toUpperCas2));\n        console.log('Login - User role type:', typeof user.role);\n        console.log('Login - User role length:', (_user$role2 = user.role) === null || _user$role2 === void 0 ? void 0 : _user$role2.length);\n        console.log('Login - User role includes spaces:', (_user$role3 = user.role) === null || _user$role3 === void 0 ? void 0 : _user$role3.includes(' '));\n        const normalizedRole = ((_user$role4 = user.role) === null || _user$role4 === void 0 ? void 0 : (_user$role4$toUpperCa = _user$role4.toUpperCase) === null || _user$role4$toUpperCa === void 0 ? void 0 : (_user$role4$toUpperCa2 = _user$role4$toUpperCa.call(_user$role4)) === null || _user$role4$toUpperCa2 === void 0 ? void 0 : (_user$role4$toUpperCa3 = _user$role4$toUpperCa2.trim) === null || _user$role4$toUpperCa3 === void 0 ? void 0 : _user$role4$toUpperCa3.call(_user$role4$toUpperCa2)) || '';\n        console.log('Login - Normalized role:', normalizedRole);\n        console.log('Login - Normalized role === ADMIN:', normalizedRole === 'ADMIN');\n        console.log('Login - Normalized role === SUPER_ADMIN:', normalizedRole === 'SUPER_ADMIN');\n        console.log('Login - Normalized role === EMPLOYEE:', normalizedRole === 'EMPLOYEE');\n        if (normalizedRole === 'SUPER_ADMIN') {\n          console.log('Login - Redirecting SUPER_ADMIN to /super-admin/dashboard');\n          navigate('/super-admin/dashboard');\n        } else if (normalizedRole === 'ADMIN') {\n          console.log('Login - Redirecting ADMIN to /admin/dashboard');\n          navigate('/admin/dashboard');\n        } else if (normalizedRole === 'EMPLOYEE') {\n          console.log('Login - Redirecting EMPLOYEE to /employee/dashboard');\n          navigate('/employee/dashboard');\n        } else {\n          console.log('Login - Redirecting FARMER to /dashboard');\n          navigate('/dashboard');\n        }\n      } else {\n        // Fallback to profile fetch if user data not in login response\n        try {\n          var _user$role5, _user$role5$toUpperCa, _user$role5$toUpperCa2, _user$role5$toUpperCa3, _user$role6, _user$role7, _user$role8, _user$role8$toUpperCa, _user$role8$toUpperCa2, _user$role8$toUpperCa3;\n          // Get user profile with token\n          const profileData = await authAPI.getProfile();\n          console.log('Login - Profile response data:', profileData);\n          console.log('Login - Profile response data keys:', Object.keys(profileData || {}));\n          const user = {\n            userName: profileData.userName || userName,\n            name: profileData.name,\n            email: profileData.email,\n            role: profileData.role,\n            forcePasswordChange: profileData.forcePasswordChange || false,\n            status: profileData.status\n          };\n\n          // For users with temporary passwords, force password change\n          if (password.includes('Temp@')) {\n            user.forcePasswordChange = true;\n            console.log('Login - Detected temporary password, forcing password change');\n          }\n          console.log('Login - User data from profile:', user);\n          console.log('Login - User role from profile:', profileData.role);\n          login(user, token);\n\n          // Check if user needs to change password (first time login with temp password)\n          console.log('Login - Checking forcePasswordChange:', user.forcePasswordChange);\n          console.log('Login - Password contains Temp@:', password.includes('Temp@'));\n          if (user.forcePasswordChange) {\n            console.log('Login - Redirecting to change password page');\n            navigate('/change-password');\n            return;\n          }\n\n          // Role-based navigation after password change or normal login\n          console.log('Login - User role for navigation:', user.role);\n          console.log('Login - User role (normalized):', (_user$role5 = user.role) === null || _user$role5 === void 0 ? void 0 : (_user$role5$toUpperCa = _user$role5.toUpperCase) === null || _user$role5$toUpperCa === void 0 ? void 0 : (_user$role5$toUpperCa2 = _user$role5$toUpperCa.call(_user$role5)) === null || _user$role5$toUpperCa2 === void 0 ? void 0 : (_user$role5$toUpperCa3 = _user$role5$toUpperCa2.trim) === null || _user$role5$toUpperCa3 === void 0 ? void 0 : _user$role5$toUpperCa3.call(_user$role5$toUpperCa2));\n          console.log('Login - User role type:', typeof user.role);\n          console.log('Login - User role length:', (_user$role6 = user.role) === null || _user$role6 === void 0 ? void 0 : _user$role6.length);\n          console.log('Login - User role includes spaces:', (_user$role7 = user.role) === null || _user$role7 === void 0 ? void 0 : _user$role7.includes(' '));\n          const normalizedRole = ((_user$role8 = user.role) === null || _user$role8 === void 0 ? void 0 : (_user$role8$toUpperCa = _user$role8.toUpperCase) === null || _user$role8$toUpperCa === void 0 ? void 0 : (_user$role8$toUpperCa2 = _user$role8$toUpperCa.call(_user$role8)) === null || _user$role8$toUpperCa2 === void 0 ? void 0 : (_user$role8$toUpperCa3 = _user$role8$toUpperCa2.trim) === null || _user$role8$toUpperCa3 === void 0 ? void 0 : _user$role8$toUpperCa3.call(_user$role8$toUpperCa2)) || '';\n          console.log('Login - Normalized role:', normalizedRole);\n          console.log('Login - Normalized role === ADMIN:', normalizedRole === 'ADMIN');\n          console.log('Login - Normalized role === SUPER_ADMIN:', normalizedRole === 'SUPER_ADMIN');\n          console.log('Login - Normalized role === EMPLOYEE:', normalizedRole === 'EMPLOYEE');\n          if (normalizedRole === 'SUPER_ADMIN') {\n            console.log('Login - Redirecting SUPER_ADMIN to /super-admin/dashboard');\n            navigate('/super-admin/dashboard');\n          } else if (normalizedRole === 'ADMIN') {\n            console.log('Login - Redirecting ADMIN to /admin/dashboard');\n            navigate('/admin/dashboard');\n          } else if (normalizedRole === 'EMPLOYEE') {\n            console.log('Login - Redirecting EMPLOYEE to /employee/dashboard');\n            navigate('/employee/dashboard');\n          } else {\n            console.log('Login - Redirecting FARMER to /dashboard');\n            navigate('/dashboard');\n          }\n        } catch (profileErr) {\n          var _response$data3, _response$data4, _response$data5, _response$data6, _response$data7, _role, _role$toUpperCase, _role$toUpperCase$cal, _role$toUpperCase$cal2;\n          console.log('Profile fetch failed, trying alternative methods');\n          console.log('Profile error:', profileErr);\n\n          // Try to get role from login response first\n          let role = (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.role;\n          let forcePasswordChange = ((_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.forcePasswordChange) || false;\n\n          // For users with temporary passwords, force password change\n          if (password.includes('Temp@')) {\n            forcePasswordChange = true;\n            console.log('Login - Detected temporary password, forcing password change');\n          }\n\n          // If role is not in login response, try to get it from the backend\n          if (!role) {\n            try {\n              console.log('Login - Trying to get role from /auth/me endpoint');\n              const meResponse = await authAPI.getProfile();\n              console.log('Login - /auth/me response:', meResponse);\n              role = meResponse === null || meResponse === void 0 ? void 0 : meResponse.role;\n              console.log('Login - Role from /auth/me:', role);\n            } catch (meErr) {\n              console.log('Login - /auth/me failed:', meErr);\n\n              // Try another common endpoint\n              try {\n                console.log('Login - Trying to get role from /api/auth/users/profile endpoint');\n                const altProfileResponse = await authAPI.getProfile();\n                console.log('Login - /api/auth/users/profile response:', altProfileResponse);\n                role = altProfileResponse === null || altProfileResponse === void 0 ? void 0 : altProfileResponse.role;\n                console.log('Login - Role from /api/auth/users/profile:', role);\n              } catch (altErr) {\n                console.log('Login - /api/auth/users/profile failed:', altErr);\n              }\n            }\n          }\n\n          // If still no role, try to determine from username or use a default\n          if (!role) {\n            console.log('Login - No role found, trying to determine from username');\n            console.log('Login - Username being checked:', userName);\n            // Check if username contains admin indicators\n            const lowerUserName = userName.toLowerCase();\n\n            // Specific username mapping for known accounts\n            const superAdminUsernames = ['projecthinfintiy@12.in', 'superadmin@hinfinity.in'];\n            const adminUsernames = ['karthik.m@hinfinity.in', 'admin@hinfinity.in'];\n            const employeeUsernames = ['employee@hinfinity.in', 'emp@hinfinity.in', 'testemployee@hinfinity.in', 'hari2912@gmail.com', 'harish134@gmail.com', 'employee2@hinfinity.in', 'test@employee.com'];\n            console.log('Login - Checking against employee usernames:', employeeUsernames);\n            console.log('Login - Username in employee list?', employeeUsernames.includes(userName));\n            if (superAdminUsernames.includes(userName)) {\n              role = 'SUPER_ADMIN';\n              console.log('Login - Determined role as SUPER_ADMIN from specific username mapping');\n            } else if (adminUsernames.includes(userName)) {\n              role = 'ADMIN';\n              console.log('Login - Determined role as ADMIN from specific username mapping');\n            } else if (employeeUsernames.includes(userName)) {\n              role = 'EMPLOYEE';\n              console.log('Login - Determined role as EMPLOYEE from specific username mapping');\n              console.log('Login - Employee username detected:', userName);\n            } else {\n              // Default to FARMER for unknown usernames\n              role = 'FARMER';\n              console.log('Login - Defaulting to FARMER role for unknown username');\n            }\n          }\n          const user = {\n            userName: userName,\n            name: ((_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : _response$data5.name) || userName,\n            email: ((_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : _response$data6.email) || userName,\n            role: role,\n            forcePasswordChange: forcePasswordChange,\n            status: ((_response$data7 = response.data) === null || _response$data7 === void 0 ? void 0 : _response$data7.status) || 'ACTIVE'\n          };\n          console.log('Login - Fallback user data:', user);\n          login(user, token);\n          if (user.forcePasswordChange) {\n            console.log('Login - Fallback: Redirecting to change password page');\n            navigate('/change-password');\n            return;\n          }\n          const normalizedRole = ((_role = role) === null || _role === void 0 ? void 0 : (_role$toUpperCase = _role.toUpperCase) === null || _role$toUpperCase === void 0 ? void 0 : (_role$toUpperCase$cal = _role$toUpperCase.call(_role)) === null || _role$toUpperCase$cal === void 0 ? void 0 : (_role$toUpperCase$cal2 = _role$toUpperCase$cal.trim) === null || _role$toUpperCase$cal2 === void 0 ? void 0 : _role$toUpperCase$cal2.call(_role$toUpperCase$cal)) || '';\n          console.log('Login - Fallback: Normalized role:', normalizedRole);\n          if (normalizedRole === 'SUPER_ADMIN') {\n            console.log('Login - Fallback: Redirecting SUPER_ADMIN to /super-admin/dashboard');\n            navigate('/super-admin/dashboard');\n          } else if (normalizedRole === 'ADMIN') {\n            console.log('Login - Fallback: Redirecting ADMIN to /admin/dashboard');\n            navigate('/admin/dashboard');\n          } else if (normalizedRole === 'EMPLOYEE') {\n            console.log('Login - Fallback: Redirecting EMPLOYEE to /employee/dashboard');\n            navigate('/employee/dashboard');\n          } else {\n            console.log('Login - Fallback: Redirecting FARMER to /dashboard');\n            navigate('/dashboard');\n          }\n        }\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Login error:', err);\n      console.error('Login error response:', err.response);\n      console.error('Login error message:', err.message);\n      setError(`Login failed: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Invalid credentials or server error.'}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateAccount = () => {\n    if (loginType === 'employee') {\n      navigate('/register-employee', {\n        state: {\n          role: 'EMPLOYEE'\n        }\n      });\n    } else if (loginType === 'farmer') {\n      navigate('/register-farmer', {\n        state: {\n          role: 'FARMER'\n        }\n      });\n    } else if (loginType === 'fpo') {\n      navigate('/register-fpo', {\n        state: {\n          role: 'FPO'\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"nic-navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nic-logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"DATE Logo\",\n          style: {\n            height: '32px',\n            marginRight: '12px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nic-text\",\n          children: \"Digital Agristack Transaction Enterprises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"link-like\",\n          onClick: () => navigate('/analytics'),\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-dot\",\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#enrollment\",\n          children: \"Check Enrollment Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agri-stack-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"agri-stack-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"agri-text\",\n              children: \"Digital\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stack-text\",\n              children: \"Agristack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"leaf-icon\",\n              children: \"\\uD83C\\uDF3F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"registry-title\",\n            children: \"India Farmer Registry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registry-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"registry-description\",\n            children: \"Farmer Registry in India enables farmers to receive a unique Farmer ID to access government benefits. Register now to ensure seamless access to agricultural schemes and services!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-desk\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Help Desk : 1800-425-1661\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-logo-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              alt: \"DATE Logo\",\n              className: \"date-logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Digital Agristack Transaction Enterprises\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Empowering Agricultural Excellence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-type-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Log In as\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-type-toggle\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `toggle-btn ${loginType === 'official' ? 'active' : ''}`,\n                onClick: () => handleLoginType('official'),\n                children: \"Official\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `toggle-btn ${loginType === 'fpo' ? 'active' : ''}`,\n                onClick: () => handleLoginType('fpo'),\n                children: \"FPO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `toggle-btn ${loginType === 'employee' ? 'active' : ''}`,\n                onClick: () => handleLoginType('employee'),\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `toggle-btn ${loginType === 'farmer' ? 'active' : ''}`,\n                onClick: () => handleLoginType('farmer'),\n                children: \"Farmer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"login-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Insert Registered Mobile Number as Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: userName,\n                onChange: e => setUserName(e.target.value),\n                required: true,\n                disabled: loading,\n                placeholder: \"Enter username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Enter password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"password-input-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: showPassword ? \"text\" : \"password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value),\n                  required: true,\n                  disabled: loading,\n                  placeholder: \"Enter password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"eye-icon\",\n                  onClick: () => setShowPassword(!showPassword),\n                  children: \"\\uD83D\\uDC41\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forgot-password\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/forgot-password\",\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"separator\",\n                children: \"|\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/forgot-userid\",\n                children: \"Forgot User ID?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"captcha-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Captcha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"captcha-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"captcha-image\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: captchaValue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"refresh-captcha\",\n                  onClick: handleRefreshCaptcha,\n                  children: \"\\uD83D\\uDD04\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: captcha,\n                  onChange: e => setCaptcha(e.target.value),\n                  placeholder: \"Enter Captcha\",\n                  className: \"captcha-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-actions-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"login-btn\",\n                disabled: loading,\n                children: loading ? 'Logging in...' : 'Log In'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 17\n              }, this), (loginType === 'employee' || loginType === 'farmer' || loginType === 'fpo') && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"create-account-btn\",\n                onClick: handleCreateAccount,\n                children: \"Create New user Acount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"3HDuE7BB5PpqiXFXtJhrIxYVc64=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","AuthContext","authAPI","logo","jsxDEV","_jsxDEV","generateCaptcha","chars","captcha","i","charAt","Math","floor","random","length","Login","_s","login","userName","setUserName","password","setPassword","loginType","setLoginType","setCaptcha","captchaValue","setCaptchaValue","showPassword","setShowPassword","error","setError","loading","setLoading","navigate","handleLoginType","type","handleRefreshCaptcha","handleSubmit","e","preventDefault","trim","toLowerCase","_response$data","loginData","response","console","log","Object","keys","token","userData","user","data","_response$data2","_user$role","_user$role$toUpperCas","_user$role$toUpperCas2","_user$role$toUpperCas3","_user$role2","_user$role3","_user$role4","_user$role4$toUpperCa","_user$role4$toUpperCa2","_user$role4$toUpperCa3","name","email","role","forcePasswordChange","status","includes","toUpperCase","call","normalizedRole","_user$role5","_user$role5$toUpperCa","_user$role5$toUpperCa2","_user$role5$toUpperCa3","_user$role6","_user$role7","_user$role8","_user$role8$toUpperCa","_user$role8$toUpperCa2","_user$role8$toUpperCa3","profileData","getProfile","profileErr","_response$data3","_response$data4","_response$data5","_response$data6","_response$data7","_role","_role$toUpperCase","_role$toUpperCase$cal","_role$toUpperCase$cal2","meResponse","meErr","altProfileResponse","altErr","lowerUserName","superAdminUsernames","adminUsernames","employeeUsernames","err","_err$response","_err$response$data","message","handleCreateAccount","state","className","children","src","alt","style","height","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","onSubmit","value","onChange","target","required","disabled","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Vamsi/karthik-changing-f/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { authAPI } from '../api/apiService';\r\nimport logo from '../assets/rightlogo.png';\r\nimport '../styles/Login.css';\r\n\r\nconst generateCaptcha = () => {\r\n  // Random captcha generation\r\n  const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n  let captcha = '';\r\n  for (let i = 0; i < 5; i++) {\r\n    captcha += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  return captcha;\r\n};\r\n\r\nconst Login = () => {\r\n  const { login } = useContext(AuthContext);\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginType, setLoginType] = useState('official'); // 'official', 'fpo', 'employee', 'farmer'\r\n  const [captcha, setCaptcha] = useState('');\r\n  const [captchaValue, setCaptchaValue] = useState(generateCaptcha());\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginType = (type) => {\r\n    setLoginType(type);\r\n    setError('');\r\n    setCaptcha('');\r\n    setCaptchaValue(generateCaptcha());\r\n  };\r\n\r\n  const handleRefreshCaptcha = () => {\r\n    setCaptchaValue(generateCaptcha());\r\n    setCaptcha('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n    if (captcha.trim().toLowerCase() !== captchaValue.toLowerCase()) {\r\n      setError('Captcha does not match.');\r\n      setLoading(false);\r\n      setCaptchaValue(generateCaptcha());\r\n      setCaptcha('');\r\n      return;\r\n    }\r\n    try {\r\n      const loginData = { userName, password };\r\n      const response = await authAPI.login(loginData);\r\n      console.log('Login - Full login response:', response);\r\n      console.log('Login - Login response data keys:', Object.keys(response || {}));\r\n      const { token } = response;\r\n      \r\n      // Extract user data from login response\r\n      const userData = response.user || response.data?.user;\r\n      console.log('Login - User data from login response:', userData);\r\n      \r\n      if (userData) {\r\n        const user = {\r\n          userName: userData.userName || userName,\r\n          name: userData.name,\r\n          email: userData.email,\r\n          role: userData.role,\r\n          forcePasswordChange: response.forcePasswordChange || response.data?.forcePasswordChange || false,\r\n          status: userData.status\r\n        };\r\n        \r\n        // For users with temporary passwords, force password change\r\n        if (password.includes('Temp@')) {\r\n          user.forcePasswordChange = true;\r\n          console.log('Login - Detected temporary password, forcing password change');\r\n        }\r\n        \r\n        console.log('Login - User data constructed:', user);\r\n        console.log('Login - User role from login response:', userData.role);\r\n        login(user, token);\r\n        \r\n        // Check if user needs to change password (first time login with temp password)\r\n        console.log('Login - Checking forcePasswordChange:', user.forcePasswordChange);\r\n        console.log('Login - Password contains Temp@:', password.includes('Temp@'));\r\n        \r\n        if (user.forcePasswordChange) {\r\n          console.log('Login - Redirecting to change password page');\r\n          navigate('/change-password');\r\n          return;\r\n        }\r\n        \r\n        // Role-based navigation after password change or normal login\r\n        console.log('Login - User role for navigation:', user.role);\r\n        console.log('Login - User role (normalized):', user.role?.toUpperCase?.()?.trim?.());\r\n        console.log('Login - User role type:', typeof user.role);\r\n        console.log('Login - User role length:', user.role?.length);\r\n        console.log('Login - User role includes spaces:', user.role?.includes(' '));\r\n        \r\n        const normalizedRole = user.role?.toUpperCase?.()?.trim?.() || '';\r\n        console.log('Login - Normalized role:', normalizedRole);\r\n        console.log('Login - Normalized role === ADMIN:', normalizedRole === 'ADMIN');\r\n        console.log('Login - Normalized role === SUPER_ADMIN:', normalizedRole === 'SUPER_ADMIN');\r\n        console.log('Login - Normalized role === EMPLOYEE:', normalizedRole === 'EMPLOYEE');\r\n        \r\n        if (normalizedRole === 'SUPER_ADMIN') {\r\n          console.log('Login - Redirecting SUPER_ADMIN to /super-admin/dashboard');\r\n          navigate('/super-admin/dashboard');\r\n        } else if (normalizedRole === 'ADMIN') {\r\n          console.log('Login - Redirecting ADMIN to /admin/dashboard');\r\n          navigate('/admin/dashboard');\r\n        } else if (normalizedRole === 'EMPLOYEE') {\r\n          console.log('Login - Redirecting EMPLOYEE to /employee/dashboard');\r\n          navigate('/employee/dashboard');\r\n        } else {\r\n          console.log('Login - Redirecting FARMER to /dashboard');\r\n          navigate('/dashboard');\r\n        }\r\n      } else {\r\n        // Fallback to profile fetch if user data not in login response\r\n        try {\r\n          // Get user profile with token\r\n          const profileData = await authAPI.getProfile();\r\n          console.log('Login - Profile response data:', profileData);\r\n          console.log('Login - Profile response data keys:', Object.keys(profileData || {}));\r\n          const user = {\r\n            userName: profileData.userName || userName,\r\n            name: profileData.name,\r\n            email: profileData.email,\r\n            role: profileData.role,\r\n            forcePasswordChange: profileData.forcePasswordChange || false,\r\n            status: profileData.status\r\n          };\r\n          \r\n          // For users with temporary passwords, force password change\r\n          if (password.includes('Temp@')) {\r\n            user.forcePasswordChange = true;\r\n            console.log('Login - Detected temporary password, forcing password change');\r\n          }\r\n          \r\n          console.log('Login - User data from profile:', user);\r\n          console.log('Login - User role from profile:', profileData.role);\r\n          login(user, token);\r\n          \r\n          // Check if user needs to change password (first time login with temp password)\r\n          console.log('Login - Checking forcePasswordChange:', user.forcePasswordChange);\r\n          console.log('Login - Password contains Temp@:', password.includes('Temp@'));\r\n          \r\n          if (user.forcePasswordChange) {\r\n            console.log('Login - Redirecting to change password page');\r\n            navigate('/change-password');\r\n            return;\r\n          }\r\n          \r\n          // Role-based navigation after password change or normal login\r\n          console.log('Login - User role for navigation:', user.role);\r\n          console.log('Login - User role (normalized):', user.role?.toUpperCase?.()?.trim?.());\r\n          console.log('Login - User role type:', typeof user.role);\r\n          console.log('Login - User role length:', user.role?.length);\r\n          console.log('Login - User role includes spaces:', user.role?.includes(' '));\r\n          \r\n          const normalizedRole = user.role?.toUpperCase?.()?.trim?.() || '';\r\n          console.log('Login - Normalized role:', normalizedRole);\r\n          console.log('Login - Normalized role === ADMIN:', normalizedRole === 'ADMIN');\r\n          console.log('Login - Normalized role === SUPER_ADMIN:', normalizedRole === 'SUPER_ADMIN');\r\n          console.log('Login - Normalized role === EMPLOYEE:', normalizedRole === 'EMPLOYEE');\r\n          \r\n          if (normalizedRole === 'SUPER_ADMIN') {\r\n            console.log('Login - Redirecting SUPER_ADMIN to /super-admin/dashboard');\r\n            navigate('/super-admin/dashboard');\r\n          } else if (normalizedRole === 'ADMIN') {\r\n            console.log('Login - Redirecting ADMIN to /admin/dashboard');\r\n            navigate('/admin/dashboard');\r\n          } else if (normalizedRole === 'EMPLOYEE') {\r\n            console.log('Login - Redirecting EMPLOYEE to /employee/dashboard');\r\n            navigate('/employee/dashboard');\r\n          } else {\r\n            console.log('Login - Redirecting FARMER to /dashboard');\r\n            navigate('/dashboard');\r\n          }\r\n        } catch (profileErr) {\r\n          console.log('Profile fetch failed, trying alternative methods');\r\n          console.log('Profile error:', profileErr);\r\n          \r\n          // Try to get role from login response first\r\n          let role = response.data?.role;\r\n          let forcePasswordChange = response.data?.forcePasswordChange || false;\r\n          \r\n          // For users with temporary passwords, force password change\r\n          if (password.includes('Temp@')) {\r\n            forcePasswordChange = true;\r\n            console.log('Login - Detected temporary password, forcing password change');\r\n          }\r\n          \r\n          // If role is not in login response, try to get it from the backend\r\n          if (!role) {\r\n            try {\r\n              console.log('Login - Trying to get role from /auth/me endpoint');\r\n              const meResponse = await authAPI.getProfile();\r\n              console.log('Login - /auth/me response:', meResponse);\r\n              role = meResponse?.role;\r\n              console.log('Login - Role from /auth/me:', role);\r\n            } catch (meErr) {\r\n              console.log('Login - /auth/me failed:', meErr);\r\n              \r\n              // Try another common endpoint\r\n              try {\r\n                console.log('Login - Trying to get role from /api/auth/users/profile endpoint');\r\n                const altProfileResponse = await authAPI.getProfile();\r\n                console.log('Login - /api/auth/users/profile response:', altProfileResponse);\r\n                role = altProfileResponse?.role;\r\n                console.log('Login - Role from /api/auth/users/profile:', role);\r\n              } catch (altErr) {\r\n                console.log('Login - /api/auth/users/profile failed:', altErr);\r\n              }\r\n            }\r\n          }\r\n          \r\n          // If still no role, try to determine from username or use a default\r\n          if (!role) {\r\n            console.log('Login - No role found, trying to determine from username');\r\n            console.log('Login - Username being checked:', userName);\r\n            // Check if username contains admin indicators\r\n            const lowerUserName = userName.toLowerCase();\r\n            \r\n            // Specific username mapping for known accounts\r\n            const superAdminUsernames = [\r\n              'projecthinfintiy@12.in',\r\n              'superadmin@hinfinity.in'\r\n            ];\r\n            \r\n            const adminUsernames = [\r\n              'karthik.m@hinfinity.in',\r\n              'admin@hinfinity.in'\r\n            ];\r\n            \r\n            const employeeUsernames = [\r\n              'employee@hinfinity.in',\r\n              'emp@hinfinity.in',\r\n              'testemployee@hinfinity.in',\r\n              'hari2912@gmail.com',\r\n              'harish134@gmail.com',\r\n              'employee2@hinfinity.in',\r\n              'test@employee.com'\r\n            ];\r\n            \r\n            console.log('Login - Checking against employee usernames:', employeeUsernames);\r\n            console.log('Login - Username in employee list?', employeeUsernames.includes(userName));\r\n            \r\n            if (superAdminUsernames.includes(userName)) {\r\n              role = 'SUPER_ADMIN';\r\n              console.log('Login - Determined role as SUPER_ADMIN from specific username mapping');\r\n            } else if (adminUsernames.includes(userName)) {\r\n              role = 'ADMIN';\r\n              console.log('Login - Determined role as ADMIN from specific username mapping');\r\n            } else if (employeeUsernames.includes(userName)) {\r\n              role = 'EMPLOYEE';\r\n              console.log('Login - Determined role as EMPLOYEE from specific username mapping');\r\n              console.log('Login - Employee username detected:', userName);\r\n            } else {\r\n              // Default to FARMER for unknown usernames\r\n              role = 'FARMER';\r\n              console.log('Login - Defaulting to FARMER role for unknown username');\r\n            }\r\n          }\r\n          \r\n          const user = {\r\n            userName: userName,\r\n            name: response.data?.name || userName,\r\n            email: response.data?.email || userName,\r\n            role: role,\r\n            forcePasswordChange: forcePasswordChange,\r\n            status: response.data?.status || 'ACTIVE'\r\n          };\r\n          \r\n          console.log('Login - Fallback user data:', user);\r\n          login(user, token);\r\n          \r\n          if (user.forcePasswordChange) {\r\n            console.log('Login - Fallback: Redirecting to change password page');\r\n            navigate('/change-password');\r\n            return;\r\n          }\r\n          \r\n          const normalizedRole = role?.toUpperCase?.()?.trim?.() || '';\r\n          console.log('Login - Fallback: Normalized role:', normalizedRole);\r\n          \r\n          if (normalizedRole === 'SUPER_ADMIN') {\r\n            console.log('Login - Fallback: Redirecting SUPER_ADMIN to /super-admin/dashboard');\r\n            navigate('/super-admin/dashboard');\r\n          } else if (normalizedRole === 'ADMIN') {\r\n            console.log('Login - Fallback: Redirecting ADMIN to /admin/dashboard');\r\n            navigate('/admin/dashboard');\r\n          } else if (normalizedRole === 'EMPLOYEE') {\r\n            console.log('Login - Fallback: Redirecting EMPLOYEE to /employee/dashboard');\r\n            navigate('/employee/dashboard');\r\n          } else {\r\n            console.log('Login - Fallback: Redirecting FARMER to /dashboard');\r\n            navigate('/dashboard');\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      console.error('Login error response:', err.response);\r\n      console.error('Login error message:', err.message);\r\n      setError(`Login failed: ${err.response?.data?.message || err.message || 'Invalid credentials or server error.'}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateAccount = () => {\r\n    if (loginType === 'employee') {\r\n      navigate('/register-employee', { state: { role: 'EMPLOYEE' } });\r\n    } else if (loginType === 'farmer') {\r\n      navigate('/register-farmer', { state: { role: 'FARMER' } });\r\n    } else if (loginType === 'fpo') {\r\n      navigate('/register-fpo', { state: { role: 'FPO' } });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      {/* Top Navigation Bar */}\r\n      <nav className=\"nic-navbar\">\r\n        <div className=\"nic-logo\">\r\n          <img src={logo} alt=\"DATE Logo\" style={{ height: '32px', marginRight: '12px' }} />\r\n          <div className=\"nic-text\">Digital Agristack Transaction Enterprises</div>\r\n        </div>\r\n        <div className=\"nav-links\">\r\n          <button className=\"link-like\" onClick={() => navigate('/analytics')}>Dashboard</button>\r\n          <span className=\"nav-dot\">•</span>\r\n          <a href=\"#enrollment\">Check Enrollment Status</a>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"main-content\">\r\n        {/* Left Section - Information Panel */}\r\n        <div className=\"info-panel\">\r\n          <div className=\"agri-stack-header\">\r\n            <h1 className=\"agri-stack-title\">\r\n              <span className=\"agri-text\">Digital</span>\r\n              <span className=\"stack-text\">Agristack</span>\r\n              <span className=\"leaf-icon\">🌿</span>\r\n            </h1>\r\n            <h2 className=\"registry-title\">India Farmer Registry</h2>\r\n          </div>\r\n          <div className=\"registry-info\">\r\n            <p className=\"registry-description\">\r\n              Farmer Registry in India enables farmers to receive a unique Farmer ID to access government benefits. \r\n              Register now to ensure seamless access to agricultural schemes and services!\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"help-desk\">\r\n            <p>Help Desk : 1800-425-1661</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Section - Login Form */}\r\n        <div className=\"login-form-section\">\r\n          <div className=\"login-card\">\r\n            {/* DATE Logo at Top */}\r\n            <div className=\"date-logo-section\">\r\n              <img src={logo} alt=\"DATE Logo\" className=\"date-logo\" />\r\n              <div className=\"date-text\">\r\n                <h3>Digital Agristack Transaction Enterprises</h3>\r\n                <p>Empowering Agricultural Excellence</p>\r\n              </div>\r\n            </div>\r\n            {/* Login Type Section */}\r\n            <div className=\"login-type-section\">\r\n              <h3>Log In as</h3>\r\n              <div className=\"login-type-toggle\">\r\n                <button \r\n                  type=\"button\"\r\n                  className={`toggle-btn ${loginType === 'official' ? 'active' : ''}`}\r\n                  onClick={() => handleLoginType('official')}\r\n                >\r\n                  Official\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className={`toggle-btn ${loginType === 'fpo' ? 'active' : ''}`}\r\n                  onClick={() => handleLoginType('fpo')}\r\n                >\r\n                  FPO\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className={`toggle-btn ${loginType === 'employee' ? 'active' : ''}`}\r\n                  onClick={() => handleLoginType('employee')}\r\n                >\r\n                  Employee\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className={`toggle-btn ${loginType === 'farmer' ? 'active' : ''}`}\r\n                  onClick={() => handleLoginType('farmer')}\r\n                >\r\n                  Farmer\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"login-form\">\r\n              {/* Username Field */}\r\n              <div className=\"form-field\">\r\n                <label>Insert Registered Mobile Number as Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={userName}\r\n                  onChange={e => setUserName(e.target.value)}\r\n                  required\r\n                  disabled={loading}\r\n                  placeholder=\"Enter username\"\r\n                />\r\n              </div>\r\n\r\n              {/* Password Field */}\r\n              <div className=\"form-field\">\r\n                <label>Enter password</label>\r\n                <div className=\"password-input-container\">\r\n                  <input\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    required\r\n                    disabled={loading}\r\n                    placeholder=\"Enter password\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"eye-icon\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                  >\r\n                    👁️\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Forgot Password Link */}\r\n              <div className=\"forgot-password\">\r\n                <a href=\"/forgot-password\">Forgot Password?</a>\r\n                <span className=\"separator\">|</span>\r\n                <a href=\"/forgot-userid\">Forgot User ID?</a>\r\n              </div>\r\n\r\n              {/* Captcha Section */}\r\n              <div className=\"captcha-section\">\r\n                <label>Captcha</label>\r\n                <div className=\"captcha-container\">\r\n                  <div className=\"captcha-image\">\r\n                    <span>{captchaValue}</span>\r\n                  </div>\r\n                  <button type=\"button\" className=\"refresh-captcha\" onClick={handleRefreshCaptcha}>\r\n                    🔄\r\n                  </button>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={captcha}\r\n                    onChange={e => setCaptcha(e.target.value)}\r\n                    placeholder=\"Enter Captcha\"\r\n                    className=\"captcha-input\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {error && <div className=\"error-message\">{error}</div>}\r\n              \r\n              <div className=\"login-actions-row\">\r\n                <button type=\"submit\" className=\"login-btn\" disabled={loading}>\r\n                  {loading ? 'Logging in...' : 'Log In'}\r\n                </button>\r\n                {(loginType === 'employee' || loginType === 'farmer' || loginType === 'fpo') && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"create-account-btn\"\r\n                    onClick={handleCreateAccount}\r\n                  >\r\n                    Create New user Acount\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}